// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KartoonYoko/go-url-shortener/internal/controller/grpcserver (interfaces: UseCaseShortener)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod --destination=./internal/controller/grpcserver/mocks/mock_shortener.go --package=mocks github.com/KartoonYoko/go-url-shortener/internal/controller/grpcserver UseCaseShortener
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	shortener "github.com/KartoonYoko/go-url-shortener/internal/model/shortener"
	gomock "go.uber.org/mock/gomock"
)

// MockUseCaseShortener is a mock of UseCaseShortener interface.
type MockUseCaseShortener struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseShortenerMockRecorder
}

// MockUseCaseShortenerMockRecorder is the mock recorder for MockUseCaseShortener.
type MockUseCaseShortenerMockRecorder struct {
	mock *MockUseCaseShortener
}

// NewMockUseCaseShortener creates a new mock instance.
func NewMockUseCaseShortener(ctrl *gomock.Controller) *MockUseCaseShortener {
	mock := &MockUseCaseShortener{ctrl: ctrl}
	mock.recorder = &MockUseCaseShortenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCaseShortener) EXPECT() *MockUseCaseShortenerMockRecorder {
	return m.recorder
}

// DeleteURLs mocks base method.
func (m *MockUseCaseShortener) DeleteURLs(arg0 context.Context, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteURLs", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteURLs indicates an expected call of DeleteURLs.
func (mr *MockUseCaseShortenerMockRecorder) DeleteURLs(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteURLs", reflect.TypeOf((*MockUseCaseShortener)(nil).DeleteURLs), arg0, arg1, arg2)
}

// GetURLByID mocks base method.
func (m *MockUseCaseShortener) GetURLByID(arg0 context.Context, arg1 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURLByID", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURLByID indicates an expected call of GetURLByID.
func (mr *MockUseCaseShortenerMockRecorder) GetURLByID(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURLByID", reflect.TypeOf((*MockUseCaseShortener)(nil).GetURLByID), arg0, arg1)
}

// GetUserURLs mocks base method.
func (m *MockUseCaseShortener) GetUserURLs(arg0 context.Context, arg1 string) ([]shortener.GetUserURLsItemResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserURLs", arg0, arg1)
	ret0, _ := ret[0].([]shortener.GetUserURLsItemResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserURLs indicates an expected call of GetUserURLs.
func (mr *MockUseCaseShortenerMockRecorder) GetUserURLs(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserURLs", reflect.TypeOf((*MockUseCaseShortener)(nil).GetUserURLs), arg0, arg1)
}

// SaveURL mocks base method.
func (m *MockUseCaseShortener) SaveURL(arg0 context.Context, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveURL", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveURL indicates an expected call of SaveURL.
func (mr *MockUseCaseShortenerMockRecorder) SaveURL(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveURL", reflect.TypeOf((*MockUseCaseShortener)(nil).SaveURL), arg0, arg1, arg2)
}

// SaveURLsBatch mocks base method.
func (m *MockUseCaseShortener) SaveURLsBatch(arg0 context.Context, arg1 []shortener.CreateShortenURLBatchItemRequest, arg2 string) ([]shortener.CreateShortenURLBatchItemResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveURLsBatch", arg0, arg1, arg2)
	ret0, _ := ret[0].([]shortener.CreateShortenURLBatchItemResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveURLsBatch indicates an expected call of SaveURLsBatch.
func (mr *MockUseCaseShortenerMockRecorder) SaveURLsBatch(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveURLsBatch", reflect.TypeOf((*MockUseCaseShortener)(nil).SaveURLsBatch), arg0, arg1, arg2)
}
