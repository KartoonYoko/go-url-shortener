// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KartoonYoko/go-url-shortener/internal/controller/grpcserver (interfaces: UseCasePinger)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod --destination=./internal/controller/grpcserver/mocks/mock_pinger.go --package=mocks github.com/KartoonYoko/go-url-shortener/internal/controller/grpcserver UseCasePinger
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockUseCasePinger is a mock of UseCasePinger interface.
type MockUseCasePinger struct {
	ctrl     *gomock.Controller
	recorder *MockUseCasePingerMockRecorder
}

// MockUseCasePingerMockRecorder is the mock recorder for MockUseCasePinger.
type MockUseCasePingerMockRecorder struct {
	mock *MockUseCasePinger
}

// NewMockUseCasePinger creates a new mock instance.
func NewMockUseCasePinger(ctrl *gomock.Controller) *MockUseCasePinger {
	mock := &MockUseCasePinger{ctrl: ctrl}
	mock.recorder = &MockUseCasePingerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCasePinger) EXPECT() *MockUseCasePingerMockRecorder {
	return m.recorder
}

// Ping mocks base method.
func (m *MockUseCasePinger) Ping(arg0 context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockUseCasePingerMockRecorder) Ping(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockUseCasePinger)(nil).Ping), arg0)
}
