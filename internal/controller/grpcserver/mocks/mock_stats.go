// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KartoonYoko/go-url-shortener/internal/controller/grpcserver (interfaces: UseCaseStats)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod --destination=./internal/controller/grpcserver/mocks/mock_stats.go --package=mocks github.com/KartoonYoko/go-url-shortener/internal/controller/grpcserver UseCaseStats
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	stats "github.com/KartoonYoko/go-url-shortener/internal/model/stats"
	gomock "go.uber.org/mock/gomock"
)

// MockUseCaseStats is a mock of UseCaseStats interface.
type MockUseCaseStats struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseStatsMockRecorder
}

// MockUseCaseStatsMockRecorder is the mock recorder for MockUseCaseStats.
type MockUseCaseStatsMockRecorder struct {
	mock *MockUseCaseStats
}

// NewMockUseCaseStats creates a new mock instance.
func NewMockUseCaseStats(ctrl *gomock.Controller) *MockUseCaseStats {
	mock := &MockUseCaseStats{ctrl: ctrl}
	mock.recorder = &MockUseCaseStatsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUseCaseStats) EXPECT() *MockUseCaseStatsMockRecorder {
	return m.recorder
}

// GetStats mocks base method.
func (m *MockUseCaseStats) GetStats(arg0 context.Context) (*stats.StatsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats", arg0)
	ret0, _ := ret[0].(*stats.StatsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStats indicates an expected call of GetStats.
func (mr *MockUseCaseStatsMockRecorder) GetStats(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockUseCaseStats)(nil).GetStats), arg0)
}
